## initialize counter values
#set ($counterget = 1)
#set ($counterpost = 1)
#set ($counterput = 1)
#set ($counterdelete = 1)
#define ($methodCounter)
#evaluate ("$counter${endpoint.method}")
#end
## remove trailing slash from the contextPath
#set ($contextPath = ${body.contextPath})
#if ($contextPath.indexOf('/') == 0)
#set ($contextPath = $contextPath.substring(1))
#end
## remove trailing slash from the basePath
#set ($basePath = ${body.basePath})
#if ($basePath.indexOf('/') == 0)
#set ($basePath = $basePath.substring(1))
#end
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
		   xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		   xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

	<reference id="httpService" interface="org.osgi.service.http.HttpService" />

	<bean id="camelServlet" class="org.apache.camel.component.servlet.CamelHttpTransportServlet"/>

	<bean class="org.apache.camel.component.osgi.OsgiServletRegisterer"
	      init-method="register"
	      destroy-method="unregister">
		<property name="servletName" value="${body.apiId}" />
		<property name="alias" value="/$contextPath" />
		<property name="httpService" ref="httpService" />
		<property name="servlet" ref="camelServlet" />
	</bean>
#foreach ($endpoint in $body.endpoint)
#foreach ($serviceEndpoint in $endpoint.serviceEndpoint)
#if ($serviceEndpoint.type == 'jms')
#set ($jms = true)
#end
#end
#end
#if ($jms)
	<!-- set reference to the ActiveMQ JMS connection factory -->
	<reference id="activemqAPI${exchange.properties.CamelSplitIndex}" interface="javax.jms.ConnectionFactory" />
#end

	<camelContext id="isp.api.${body.apiId}" xmlns="http://camel.apache.org/schema/blueprint" streamCache="true" useBreadcrumb="true">

		<!--********************************************************************************-->
		<!-- REST API                                                                       -->
		<!--********************************************************************************-->

		<restConfiguration component="servlet" bindingMode="off"
						   apiContextPath="/$basePath/api-doc" #if ($body.cors)enableCORS="${body.cors.enable}"#end>
			<endpointProperty key="servletName" value="${body.apiId}" />
			<dataFormatProperty key="prettyPrint" value="true" />
			<apiProperty key="base.path" value="/$basePath" />
#if ($body.description)
			<apiProperty key="api.description" value="${body.description}" />
#end
			<apiProperty key="api.title" value="${body.apiId}" />
			<apiProperty key="api.version" value="${body.version}" />
#if ($body.cors.enable)
			<corsHeaders key="Access-Control-Allow-Origin" value="${body.cors.corsHeaders[0].origin}" />
			<corsHeaders key="Access-Control-Allow-Methods" value="${body.cors.corsHeaders[0].methods}" />
			<corsHeaders key="Access-Control-Allow-Headers" value="${body.cors.corsHeaders[0].headers}" />
			<corsHeaders key="Access-Control-Max-Age" value="${body.cors.corsHeaders[0].maxAge}" />
#end
		</restConfiguration>

		<!-- REST endpoints -->
        <rest path="/$basePath">
#foreach ($endpoint in $body.endpoint)
## remove trailing slash from the URI
#set ($uri = ${endpoint.uri})
#if ($uri.indexOf('/') == 0)
#set ($uri = $uri.substring(1))
#end
			<${endpoint.method} uri="/$uri" id="isp.api.${body.apiId}.${endpoint.method}.$methodCounter">
#if (${endpoint.method} == "get")
#set ($counterget = $counterget + 1)
#elseif (${endpoint.method} == "post")
#set ($counterpost = $counterpost + 1)
#elseif (${endpoint.method} == "put")
#set ($counterput = $counterput + 1)
#elseif (${endpoint.method} == "delete")
#set ($counterdelete = $counterdelete + 1)
#end
#if ($endpoint.description)
				<description>${endpoint.description}</description>
#end
				<route>
#if ($endpoint.serviceEndpoint.size() > 1)
					<!-- add the body to the claim check stack for later use -->
					<claimCheck operation="Set" key="inBody" />
#end
#foreach ($serviceEndpoint in $endpoint.serviceEndpoint)
#if ($serviceEndpoint.type == 'jms')
					<!-- send the chunk to the JMS endpoint -->
					<inOnly uri="jms:${serviceEndpoint.jms.type}:${serviceEndpoint.jms.destinationName}?connectionFactory=activemqAPI${exchange.properties.CamelSplitIndex}" />
#elseif ($serviceEndpoint.type == 'direct-vm')
					<!-- send the chunk to direct -->
					<to uri="direct-vm:${serviceEndpoint.someName}"/>
#end
#if ($foreach.hasNext)
					<!-- get the body from the claim check stack -->
					<claimCheck operation="Get" key="inBody" />
#end
#end
				</route>
			</${endpoint.method}>
#end
		</rest>

	</camelContext>

</blueprint>